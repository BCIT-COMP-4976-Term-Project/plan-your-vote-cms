@model Web.Models.BallotIssueCreate
@using  Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["Edit"];
}

<h1>@ViewData["Title"]</h1>

<div class="panel panel-default">
    <h4>@Localizer["BallotIssue"]</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="BallotIssueTitle" class="control-label"></label>
                    <input asp-for="BallotIssueTitle" class="form-control" />
                    <span asp-validation-for="BallotIssueTitle" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <label class="control-label">@Localizer["Options"]</label>
                <script>
                    function appendInputChild(e) {
                        var myDiv = document.createElement('div');
                        myDiv.setAttribute('class', 'form-group');

                        var myInput = document.createElement('input');

                        var optionsElement = document.getElementById("options");
                        myInput.setAttribute('id', `OptionsTitles_${optionsElement.childElementCount}_`);
                        myInput.setAttribute('name', `OptionsTitles[${optionsElement.childElementCount}]`);
                        myInput.setAttribute('type', "text");
                        myInput.setAttribute('class', 'form-control');

                        myDiv.append(myInput);

                        optionsElement.append(myDiv);
                    }
                </script>
                <div id="options">
                    @for (int i = 0; i < Model.OptionsTitles.Count; i++)
                    {
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.OptionsTitles[i], new { @class = "form-control" })
                        </div>
                    }
                </div>
                <button id="AddIssueOption" type="button" role="button" class="btn btn-primary" onClick="appendInputChild(event)">Add</button>
                
                <div class="form-group">
                    <input type="submit" value=@Localizer["Save"] class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer["Back to List"]</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
